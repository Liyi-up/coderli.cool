{"version":3,"file":"index.js","sources":["../../../packages/mobx-lite/src/../src/global.ts","../../../packages/mobx-lite/src/../src/core/globalState.ts","../../../packages/mobx-lite/src/../src/api/action.ts","../../../packages/mobx-lite/src/../src/api/autorun.ts","../../../packages/mobx-lite/src/../src/core/dependency.ts","../../../packages/mobx-lite/src/../src/api/observable.ts"],"sourcesContent":["declare const window: any;\ndeclare const self: any;\n\nconst mockGlobal = {};\n\nexport function getGlobal() {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  // @ts-ignore\n  if (typeof global !== \"undefined\") {\n    // @ts-ignore\n    return global;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  return mockGlobal;\n}\n","import { getGlobal } from \"../global\";\nimport { Observer } from \"./dependency\";\n\nexport const currentObserver = Symbol(\"currentObserver\");\nconst mobxGlobalState = Symbol(\"mobxGlobalState\");\nclass MobxGlobalState {\n  isBatching = false;\n  activeEffect: (() => void) | null = null;\n  observers = new WeakMap<object, Map<string | symbol, Set<Observer>>>();\n  pendingNotifications = new Set();\n}\n\nexport let globalState: MobxGlobalState = (function () {\n  const global = getGlobal();\n  if (!global[mobxGlobalState]) {\n    global[mobxGlobalState] = new MobxGlobalState();\n  }\n  return global[mobxGlobalState];\n})();\n","import { globalState } from \"../core/globalState\";\n\nfunction action<T extends (...args: any[]) => any>(fn: T): T {\n  const { isBatching } = globalState;\n  return function (...args: any[]): any {\n    if (isBatching) {\n      return fn(...args);\n    }\n    globalState.isBatching = true;\n\n    try {\n      return fn(...args);\n    } finally {\n      globalState.isBatching = false;\n      globalState.pendingNotifications.forEach((notification: any) => {\n        notification();\n      });\n      globalState.pendingNotifications.clear();\n    }\n  } as T;\n}\n\nexport default action;\n","import { globalState } from \"../core/globalState\";\n\nfunction autorun(effect: () => void) {\n  const run = () => {\n    const prev = globalState.activeEffect;\n    globalState.activeEffect = run;\n    try {\n      effect();\n    } finally {\n      globalState.activeEffect = prev;\n    }\n  };\n  // 初始化执行收集依赖\n  run();\n}\n\nexport default autorun;\n","import { globalState } from \"./globalState\";\n\nexport interface Observer {\n  (): void;\n  dirty?: () => void;\n}\n\nexport function collectDependency(target: object, key: string | symbol): void {\n  const { observers, activeEffect } = globalState;\n  if (!activeEffect) {\n    return;\n  }\n\n  let targetObservers = observers.get(target);\n  if (!targetObservers) {\n    targetObservers = new Map();\n    observers.set(target, targetObservers);\n  }\n  let keyObservers = targetObservers.get(key);\n  if (!keyObservers) {\n    keyObservers = new Set();\n    targetObservers.set(key, keyObservers);\n  }\n  // 将当前活跃的观察者添加到依赖集合\n  keyObservers.add(activeEffect);\n}\n\nexport function notifyDependency(target: object, key: string | symbol): void {\n  const { isBatching, observers, pendingNotifications } = globalState;\n  const targetObservers = observers.get(target);\n  if (!targetObservers) {\n    return;\n  }\n  const observersSet = targetObservers.get(key);\n  if (observersSet) {\n    if (isBatching) {\n      // 如果在action中，暂时存储需要触发的观察者\n      observersSet.forEach((observer) => {\n        pendingNotifications.add(observer);\n      });\n    } else {\n      observersSet.forEach((observer) => observer());\n    }\n  }\n}\n","import { collectDependency, notifyDependency } from \"../core/dependency\";\n\nconst observableKey = Symbol.for(\"isObservable\");\nconst observableValueKey = Symbol.for(\"observableValue\");\nconst rawValueKey = Symbol.for(\"rawValue\");\n\n/**\n * 创建可观察对象\n * @param obj 要创建可观察对象的对象\n * @returns 可观察对象\n */\nexport function observable<T>(target: T): T {\n  if (typeof target !== \"object\" || target == null) {\n    return createObservablePrimitive(target);\n  }\n  if (Array.isArray(target)) {\n    // TODO: 数组的响应式处理\n    return target;\n  }\n\n  if (isObservable(target)) {\n    return target;\n  }\n\n  return new Proxy(target, {\n    get(target, key, receiver) {\n      const result = Reflect.get(target, key, receiver);\n      // 如果是对象，递归创建可观察对象（懒处理）\n      if (\n        typeof result === \"object\" &&\n        result !== null &&\n        !isObservable(result)\n      ) {\n        return observable(result);\n      }\n\n      collectDependency(target, key);\n      return result;\n    },\n\n    set(target, key, value, receiver) {\n      const oldValue = Reflect.get(target, key, receiver);\n      if (oldValue === value) return true;\n      const result = Reflect.set(target, key, value, receiver);\n      notifyDependency(target, key);\n      return result;\n    },\n\n    deleteProperty(target, key) {\n      const hadKey = Reflect.has(target, key);\n      const result = Reflect.deleteProperty(target, key);\n\n      if (hadKey && result) {\n        notifyDependency(target, key);\n      }\n\n      return result;\n    },\n  });\n}\n\n/**\n * 检查一个对象是否是可观察对象\n * @param value 要检查的值\n * @returns 是否是可观察对象\n */\nfunction isObservable(value: any): boolean {\n  return (\n    typeof value === \"object\" && value !== null && value[observableKey] === true\n  );\n}\n\nfunction createObservablePrimitive<T>(value: T): T {\n  // 对于null和undefined，直接返回\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  const wrapper = {\n    [observableKey]: true,\n    [observableValueKey]: true,\n    [rawValueKey]: value,\n    get value(): T {\n      collectDependency(this, \"value\");\n      return value;\n    },\n    set value(newValue: T) {\n      if (value !== newValue) {\n        value = newValue;\n        notifyDependency(this, \"value\");\n      }\n    },\n    // 提供valueOf和toString方法，以便在需要时自动转换为原始值\n    valueOf(): any {\n      return value;\n    },\n\n    toString(): string {\n      return String(value);\n    },\n\n    [Symbol.toPrimitive](hint: string): any {\n      if (hint === \"number\" && typeof value === \"boolean\") {\n        return value ? 1 : 0;\n      }\n      return value;\n    },\n  };\n\n  // 使用Proxy确保属性访问被正确拦截\n  return new Proxy(wrapper, {\n    get(target, key, receiver) {\n      // 直接访问包装器对象的属性\n      const result = Reflect.get(target, key, receiver);\n      return result;\n    },\n\n    // 拦截二元运算符等操作\n    apply(target, thisArg, args) {\n      return value;\n    },\n\n    set(target, key, value, receiver) {\n      if (key === \"value\") {\n        target.value = value;\n        return true;\n      }\n      return Reflect.set(target, key, value, receiver);\n    },\n\n    has(target, key) {\n      if (key === \"value\") return true;\n      // @ts-ignore\n      return key in value;\n    },\n  }) as unknown as T;\n}\n\nobservable[observableKey] = true;\n\nexport default observable;\n"],"names":[],"mappings":"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"}